openapi: 3.0.0
info:
  version: '1.0'
  title: Empo News
  description: 'This is the Open API documentation for the REST API of **Empo News** deployed at <https://empo-news.herokuapp.com/>. <br>All operations are executable and require authentication. In this case, you must **Authorize** your request by providing the api_key vaule you got when you created the account.'
servers:
    - url: 'https://empo-news.herokuapp.com/api/v1'
paths:
    /profiles:
        get:
            summary: Return a User profile
            operationId: getUserProfile
            tags:
                - users
            parameters:
                - name: id
                  in: query
                  required: true
                  description: ID of the profile to return
                  schema:
                      type: string
            responses:
                200:
                    description: Finds a User by its ID
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OtherProfile'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
    /profile/{id}:
        get:
            summary: Return signed in profile
            operationId: getMyProfile
            tags:
                - users
            parameters:
                - name: id
                  in: path
                  required: true
                  description: ID of the profile to return
                  schema:
                      type: string
            responses:
                200:
                    description: Returns the authenticated profile
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MyProfile'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                403:
                    description: 'Error: Forbidden'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error403'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
            security:
            - ApiKeyAuth: []
    /contributions:
        post:
            summary: Adds a new Contribution
            operationId: createContribution
            tags:
                - contributions
            requestBody:
                description: Provide the author & content of the new Contribution
                content:
                    application/json:
                        schema:
                            oneOf:
                                - $ref: '#/components/schemas/CreateContributionWithUrl'
                                - $ref: '#/components/schemas/CreateContributionWithText'
                        examples:
                            urlExample:
                                $ref: '#/components/examples/postUrl'
                            textExample:
                                $ref: '#/components/examples/postText'
                required: true
            responses:
                201:
                    description: Contribution created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContributionResult'
                400:
                    description: 'Error: Bad Request'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error400'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
            security:
            - ApiKeyAuth: []
        get:
            summary: Retrieves all the contributions
            operationId: listContribution
            tags:
                - contributions
            responses:
                200:
                  description: List of all contributions
                  content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/Contribution'
                500:
                  description: 'Error: Internal server error'
                  content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
                        examples:
                            errorExample:
                                $ref: '#/components/examples/error500'
    /contribution/{contributionId}:
        put:
            summary: Edits a contribution by its ID
            operationId: editContributionById
            tags:
                - contributions
            description: Edits a single Contribution
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to return
                schema:
                    type: integer
                    format: int64
            requestBody:
              required: true
              description: Provides the new content for the contribution
              content:
                  application/json:
                      schema:
                          oneOf:
                              - type: object
                                properties:
                                    title:
                                        type: string
                                        minLength: 4
                                        maxLength: 2000
                                        example: 'This is my new title'
                              - $ref: '#/components/schemas/CreateContributionWithText'
                      examples:
                          urlContribution:
                              summary: Example of a contribution with url
                              value:
                                  title: This is my new title
                          textContribution:
                              summary: Example of a contribution with text
                              value:
                                  title: This is my new title
                                  text: Hey there!
            responses:
                200:
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContributionResult'
                400:
                    description: 'Error: Bad Request'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error400'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                403:
                    description: 'Error: Forbidden'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error403'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
            security:
            - ApiKeyAuth: []
        get:
            summary: Finds a contribution by its ID
            operationId: getContributionById
            tags:
                - contributions
            description: Returns a single Contribution
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to return
                schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Contribution'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
        delete:
            summary: Deletes a Contribution
            operationId: deleteContribution
            tags:
                - contributions
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to delete
                schema:
                    type: integer
                    format: int64
            responses:
                204:
                    description: Contribution deleted
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/BasicResponse'
                            examples:
                                successExample:
                                    $ref: '#/components/examples/success204'
                404:
                    description: 'Error: Not found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                403:
                    description: 'Error: Forbidden'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error403'
            security:
            - ApiKeyAuth: []
    /contribution/{contributionId}/vote:
        put:
            summary: Votes a Contribution
            operationId: voteContribution
            tags:
                - contributions
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to vote
                schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Successful operation
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/BasicResponse'
                            examples:
                                successExample:
                                    $ref: '#/components/examples/success200'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
                409:
                    description: 'Error: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error409'
            security:
            - ApiKeyAuth: []
    /contribution/{contributionId}/unvote:
        put:
            summary: Unvotes a Contribution
            operationId: unvoteContribution
            tags:
                - contributions
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to unvote
                schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Successful operation
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/BasicResponse'
                            examples:
                                successExample:
                                    $ref: '#/components/examples/success200'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
                409:
                    description: 'Error: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error409'
            security:
            - ApiKeyAuth: []
    /contribution/{contributionId}/hide:
        put:
            summary: Hides a Contribution
            operationId: hideContribution
            tags:
                - contributions
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to unvote
                schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Successful operation
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/BasicResponse'
                            examples:
                                successExample:
                                    $ref: '#/components/examples/success200'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
                409:
                    description: 'Error: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error409'
            security:
            - ApiKeyAuth: []
    /contribution/{contributionId}/unhide:
        put:
            summary: Unhides a Contribution
            operationId: unhideContribution
            tags:
                - contributions
            parameters:
              - name: contributionId
                in: path
                required: true
                description: ID of the contribution to unvote
                schema:
                    type: integer
                    format: int64
            responses:
                200:
                    description: Successful operation
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/BasicResponse'
                            examples:
                                successExample:
                                    $ref: '#/components/examples/success200'
                401:
                    description: 'Error: Unauthorized'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error401'
                404:
                    description: 'Error: Not Found'
                    content:
                        aplication/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error404'
                409:
                    description: 'Error: Conflict'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                errorExample:
                                    $ref: '#/components/examples/error409'
            security:
            - ApiKeyAuth: []
components:
    schemas:
        MyProfile:
            type: object
            properties:
                id:
                    type: string
                    maxLength: 150
                    example: John
                date_joined:
                    type: string
                    format: date-time
                    example: '2020-04-16 22:41:09.025719'
                karma:
                    type: integer
                    format: int32
                    default: 1
                    example: 4
                about:
                    type: string
                    maxLength: 2000
                    nullable: true
                    default: null
                    example: Hello my name is John and I love Empo News
                email:
                    type: string
                    format: email
                    maxLength: 254
                    example: john.doe@mail.com
                showdead:
                    type: boolean
                    default: false
                    example: true
                noprocast:
                    type: boolean
                    default: false
                    example: false
                maxvisit:
                    type: integer
                    format: int32
                    default: 1
                    example: 20
                minaway:
                    type: integer
                    format: int32
                    default: 100
                    example: 180
                delay:
                    type: integer
                    format: int32
                    default: 0
                    example: 0
        OtherProfile:
            type: object
            properties:
                id:
                    type: string
                    maxLength: 150
                    example: 'Thomas'
                date_joined:
                    type: string
                    format: date-time
                    example: '2020-04-16 22:41:09.025719'
                karma:
                    type: integer
                    format: int32
                    default: 1
                    example: 4
        Contribution:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                    example: 1
                title:
                    type: string
                    minLength: 4
                    maxLength: 2000
                    example: 'This is my first contribution'
                points:
                    type: integer
                    format: int32
                    default: 1
                    example: 3
                publication_time:
                    type: string
                    format: date-time
                    example: '2020-04-16 22:18:21.208736'
                url:
                    type: string
                    nullable: true
                    format: url
                    maxLength: 500
                    example: 'https://google.com'
                text:
                    type: string
                    nullable: true
                    maxLength: 500
                    example: "Hello Wordl!"
                comments:
                    type: integer
                    format: int32
                    default: 0
                    example: 3
                user_id:
                    type: integer
                    format: int64
                    example: 2
                likes:
                    type: integer
                    format: int32
                    example: 38
                hidden:
                    type: array
                    items:
                        type: string
                        maxLength: 150
                    example: [John, Thomas, Rosie]
        ContributionResult:
            type: object
            properties:
                new_contribution:
                    $ref: '#/components/schemas/Contribution'
                api_key:
                    type: string
                    example: MjAyMC0wNC0xOCAxMjoyODo0MSBVVEM=\n
        CreateContributionWithUrl:
            required:
            - title
            - url
            type: object
            properties:
                title:
                    type: string
                    minLength: 4
                    maxLength: 2000
                    example: This is my first contribution
                url:
                    type: string
                    nullable: true
                    format: url
                    maxLength: 500
                    example: https://www.google.com
        CreateContributionWithText:
            required:
            - title
            - text
            type: object
            properties:
                title:
                    type: string
                    minLength: 4
                    maxLength: 2000
                    example: This is my first contribution
                text:
                    type: string
                    nullable: true
                    maxLength: 500
                    example: Hello Wordl!
        BasicResponse:
            type: object
            properties:
                status:
                    type: integer
                    enum: [200, 204]
                message: 
                    type: string
                
        Error:
            type: object
            properties:
                status:
                    type: integer
                    enum: [400, 401, 403, 404, 409, 500]
                error: 
                    type: string
                    enum: ["Bad Request", "Unauthorized", "Forbidden", "Not Found", "Conflict", "Internal Server Error"]
                message: 
                    type: string
    examples:
        success200:
            value:
                status: 200
                message: OK
        success204:
            value:
                status: 204
                message: Deleted
        error400:
            value:
                status: 400
                error: "Bad Request"
                message: "Content is too long (maximum is 500 characters)"
        error401:
            value:
                status: 401
                error: "Unauthorized"
                message: "You provided no api key (API-KEY Header)"
        error403:
            value:
                status: 403
                error: "Forbidden"
                message: "Your api key (API-KEY Header) is not valid"
        error404:
            value:
                status: 404
                error: "Not Found"
                message: "No item with that ID"
        error409:
            value:
                status: 409
                error: "Conflict"
                message: "The Contribution already is in this state"
        error500:
            value:
                status: 500
                error: "Internal Server Error"
                message: "There was an error when retrieving the data"
        postUrl:
            value: 
                title: This is my first contribution
                url: https://www.google.com
        postText:
            value:
                title: This is my first contribution
                text: Hello World!
        myProfile:
            value:
                id: John
                date_joined: '2020-04-16 22:41:09.025719'
                karma: 3
                about: null
                email: john@mail.com
                showdead: false
                noprocast: false
                maxvisit: 1
                minaway: 100
                delay: 0
        otherProfile:
            value:
                id: Thomas
                date_joined: '2020-04-6 12:21:09.025719'
                karma: 7
    securitySchemes:
        ApiKeyAuth:
            type: apiKey
            name: API-KEY
            in: header